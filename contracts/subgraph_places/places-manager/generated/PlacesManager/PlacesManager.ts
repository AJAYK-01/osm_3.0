// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class placeAdded extends ethereum.Event {
  get params(): placeAdded__Params {
    return new placeAdded__Params(this);
  }
}

export class placeAdded__Params {
  _event: placeAdded;

  constructor(event: placeAdded) {
    this._event = event;
  }

  get contributor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get place_name(): string {
    return this._event.parameters[1].value.toString();
  }

  get latitude(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get longitude(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class placeApproved extends ethereum.Event {
  get params(): placeApproved__Params {
    return new placeApproved__Params(this);
  }
}

export class placeApproved__Params {
  _event: placeApproved;

  constructor(event: placeApproved) {
    this._event = event;
  }

  get placeCid(): string {
    return this._event.parameters[0].value.toString();
  }

  get place_name(): string {
    return this._event.parameters[1].value.toString();
  }

  get latitude(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get longitude(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PlacesManager__placesResult {
  value0: string;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getCid(): string {
    return this.value0;
  }

  getPlace_name(): string {
    return this.value1;
  }

  getLatitude(): BigInt {
    return this.value2;
  }

  getLongitude(): BigInt {
    return this.value3;
  }

  getIsApproved(): boolean {
    return this.value4;
  }

  getApprovalCount(): BigInt {
    return this.value5;
  }
}

export class PlacesManager__usersResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getHomeLatitude(): BigInt {
    return this.value0;
  }

  getHomeLongitude(): BigInt {
    return this.value1;
  }
}

export class PlacesManager extends ethereum.SmartContract {
  static bind(address: Address): PlacesManager {
    return new PlacesManager("PlacesManager", address);
  }

  places(param0: BigInt): PlacesManager__placesResult {
    let result = super.call(
      "places",
      "places(uint256):(string,string,uint256,uint256,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new PlacesManager__placesResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBigInt()
    );
  }

  try_places(param0: BigInt): ethereum.CallResult<PlacesManager__placesResult> {
    let result = super.tryCall(
      "places",
      "places(uint256):(string,string,uint256,uint256,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlacesManager__placesResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBigInt()
      )
    );
  }

  placeToOwner(param0: BigInt): Address {
    let result = super.call("placeToOwner", "placeToOwner(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_placeToOwner(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "placeToOwner",
      "placeToOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  users(param0: Address): PlacesManager__usersResult {
    let result = super.call("users", "users(address):(uint256,uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return new PlacesManager__usersResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_users(param0: Address): ethereum.CallResult<PlacesManager__usersResult> {
    let result = super.tryCall("users", "users(address):(uint256,uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlacesManager__usersResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }
}

export class AddBusinessPlaceCall extends ethereum.Call {
  get inputs(): AddBusinessPlaceCall__Inputs {
    return new AddBusinessPlaceCall__Inputs(this);
  }

  get outputs(): AddBusinessPlaceCall__Outputs {
    return new AddBusinessPlaceCall__Outputs(this);
  }
}

export class AddBusinessPlaceCall__Inputs {
  _call: AddBusinessPlaceCall;

  constructor(call: AddBusinessPlaceCall) {
    this._call = call;
  }

  get _cid(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _place_name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _latitude(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _longitude(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddBusinessPlaceCall__Outputs {
  _call: AddBusinessPlaceCall;

  constructor(call: AddBusinessPlaceCall) {
    this._call = call;
  }
}

export class AddPlaceCall extends ethereum.Call {
  get inputs(): AddPlaceCall__Inputs {
    return new AddPlaceCall__Inputs(this);
  }

  get outputs(): AddPlaceCall__Outputs {
    return new AddPlaceCall__Outputs(this);
  }
}

export class AddPlaceCall__Inputs {
  _call: AddPlaceCall;

  constructor(call: AddPlaceCall) {
    this._call = call;
  }

  get _cid(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _place_name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _latitude(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _longitude(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddPlaceCall__Outputs {
  _call: AddPlaceCall;

  constructor(call: AddPlaceCall) {
    this._call = call;
  }
}

export class ApprovePlaceCall extends ethereum.Call {
  get inputs(): ApprovePlaceCall__Inputs {
    return new ApprovePlaceCall__Inputs(this);
  }

  get outputs(): ApprovePlaceCall__Outputs {
    return new ApprovePlaceCall__Outputs(this);
  }
}

export class ApprovePlaceCall__Inputs {
  _call: ApprovePlaceCall;

  constructor(call: ApprovePlaceCall) {
    this._call = call;
  }

  get _placeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ApprovePlaceCall__Outputs {
  _call: ApprovePlaceCall;

  constructor(call: ApprovePlaceCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SignUpCall extends ethereum.Call {
  get inputs(): SignUpCall__Inputs {
    return new SignUpCall__Inputs(this);
  }

  get outputs(): SignUpCall__Outputs {
    return new SignUpCall__Outputs(this);
  }
}

export class SignUpCall__Inputs {
  _call: SignUpCall;

  constructor(call: SignUpCall) {
    this._call = call;
  }

  get _homeLatitude(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _homeLongitude(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SignUpCall__Outputs {
  _call: SignUpCall;

  constructor(call: SignUpCall) {
    this._call = call;
  }
}
